#!/usr/bin/env python3
import threading
import sys
import random, re
from time import sleep
import datetime

# foreground colors for the terminal
black =    "\033[30m"
white =    "\033[97m"
red =      "\033[31m"
green =    "\033[32m"
yellow =   "\033[33m"
blue =     "\033[34m"
magenta =  "\033[35m"
cyan =     "\033[36m"
lgray =    "\033[37m"
dgray =    "\033[90m"
lred =     "\033[91m"
lgreen =   "\033[92m"
lyellow =  "\033[93m"
lblue =    "\033[94m"
lmagenta = "\033[95m"
lcyan =    "\033[96m"

# background colors for the terminal
bgblack =    "\033[40m"
bgwhite =    "\033[107m"
bgred =      "\033[41m"
bggreen =    "\033[42m"
bgyellow =   "\033[43m"
bgblue =     "\033[44m"
bgmagenta =  "\033[45m"
bgcyan =     "\033[46m"
bglgray =    "\033[47m"
bgdgray =    "\033[100m"
bglred =     "\033[101m"
bglgreen =   "\033[102m"
bglyellow =  "\033[103m"
bglblue =    "\033[104m"
bglmagenta = "\033[105m"
bglcyan =    "\033[106m"
bgdefault =  "\033[49m"

# styles for the terminal
default =    "\033[0m"
bold =       "\033[1m"
rbold =      "\033[21m" #reset
dim =        "\033[2m"
rdim =       "\033[22m" #reset
underline =  "\033[4m"
runderline = "\033[24m" #reset
blink =      "\033[5m"
rblink =     "\033[25m" #reset
invert =     "\033[7m"
rinvert =    "\033[27m" #reset
hidden =     "\033[8m"
rhidden =    "\033[28m" #reset

cmd = sys.argv[2][1:].split()
thetime = datetime.datetime.now().strftime("[%Y-%m-%d %H:%M]");
userid = sys.argv[1]

def printtest():
    f = open("/tmp/.schat.log", "a")
    f.write("test\n")
    f.close()

def display_warning(warning, delay=1):
    print(red + bold + warning + default)
    sleep(delay)

def roll(dice):
    if len(cmd) == 2:
        try:
            a,b,c=re.findall("^(\d*)d(\d+)(\+\d+)?$",dice)[0];the_roll=int(c or 0)+(sum(random.randint(1,int(b))for i in range(int(a or 1)))or q)
            f = open("/tmp/.schat.log", "a")
            f.write(thetime + " " + yellow + userid + " rolled "
                    + red + dice + yellow + " and got a " + red
                    + str(the_roll) + yellow + "." + default + "\n")
            f.close()
        except:
            display_warning("Whoopsie!")
    else:
        display_warning("Invalid number of commands.")

def print_log(s):
    return thetime + red + userid + ": " + s + default + "\n"

def Main():
    if cmd[0] == "roll":
        if len(cmd) == 1:
            cmd.append("1d20") # makes default 1d20 roll if user supplies nothing else
        t = threading.Thread(name="roll", kwargs={'dice': cmd[1]}, target=roll)
        t.start()
    else:
        display_warning("Command not found.")

if __name__ == "__main__":
    Main()
